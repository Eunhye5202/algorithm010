1. Queue源码分析
	1. 继承了collection接口；
	2. 相关方法：
2.1 add方法：插入相关元素，返回一个Boolean类型的操作状态返回值；
2.2 offer方法：功能同add方法，但是插入失败时会抛出异常；
2.3 remove方法：取出并移除队列头部的元素，区别与poll方法的是，如果容器为空，则会抛出异常；
2.4 poll方法：功能同remove方法，不会抛出异常；
2.5 element方法：取出队列头顶的元素并移除，当队列为空时会抛出异常；
2.6 peek方法：功能同element方法，但是不移除元素。

2. PriorityQueue源码解读
	1. 继承了abstractqueue父类，实现了序列化接口；
	2. 队列初始容量为11；
	3. 优先队列【n】的实现是由队列【2* n+1】和队列【2* （n+1）】两个队列实现的；
	4. 优先级的定义方式有如下几种：
4.1 通过实现comparator接口进行排序；
4.2 根据元素自身属性进行自然徐排序；
4.3 如果传入的类没有实现comparator接口，元素则根据自身值进行升序排序。
	5. 构造器参数可以传入：比较器、初始容量大小、集合、其他priorityqueue、
sortedset；
	6. 有从传入参数为priorityqueue、collection的初始化方法；
	7. grow方法：
7.1 首先判断新的队列容量大小：


	* 如果老队列的大小小于64，则新队列的大小为：老+（老+2）；
	* 如果老队列的大小大于64，则新队列的大小为：老+老/2；
7.2 再判断新队列大小与默认容量大小的值：
	* 如果新队列的大小-默认最大值小于零，则直接使用Arrays工具类中的copyof方法拷贝老队列中的元素进进的队列，并且赋予新队列的容量大小为当前新队列的大小；
	* 如果新队列的大小-默认最大值大于零，则调用hugeCapacity方法进行新队列容量大小的确认；
	* hugeCapacity方法主要判断用户传入的容量大小与默认最大容量值进行比较，如果大于默认值，则容量取integer的最大值；如果小于则取默认容量值作为新队列的大小。


	1. add与offer方法：add直接调用offer方法，向队列中加入一个指定元素，并返回插入结果；
	2. remove方法：移除队列中的目标值，以及通过equals函数判断与目标值相等的元素。如果队列包含且移除成功，则返回true。

